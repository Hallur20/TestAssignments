<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="test-project-1"><sessioninfo id="hallur-MS-7971-ee7dc238" start="1558380605950" dump="1558380606078"/><sessioninfo id="hallur-MS-7971-a1f5c1d2" start="1558380676070" dump="1558380676521"/><sessioninfo id="hallur-MS-7971-a1214fef" start="1558382655587" dump="1558382656051"/><sessioninfo id="hallur-MS-7971-7f79aa31" start="1558382735523" dump="1558382736076"/><package name=""><class name="TrainFunctions" sourcefilename="TrainFunctions.java"><method name="&lt;init&gt;" desc="()V" line="3"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="takeTrain" desc="(Ljava/time/LocalTime;)Ljava/lang/String;" line="7"><counter type="INSTRUCTION" missed="2" covered="43"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="6"/><counter type="COMPLEXITY" missed="2" covered="5"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="PeterSestoft" sourcefilename="PeterSestoft.java"><method name="&lt;init&gt;" desc="()V" line="1"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="minMax" desc="([Ljava/lang/String;)LMinMaxPair;" line="6"><counter type="INSTRUCTION" missed="6" covered="56"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="9"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="6" covered="59"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><class name="MinMaxPair" sourcefilename="MinMaxPair.java"><method name="&lt;init&gt;" desc="(II)V" line="5"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getMin" desc="()I" line="11"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMin" desc="(I)V" line="15"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="getMax" desc="()I" line="19"><counter type="INSTRUCTION" missed="0" covered="3"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="setMax" desc="(I)V" line="23"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="toString" desc="()Ljava/lang/String;" line="28"><counter type="INSTRUCTION" missed="17" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="25" covered="15"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="MinMaxPair.java"><line nr="5" mi="0" ci="2" mb="0" cb="0"/><line nr="6" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="3" mb="0" cb="0"/><line nr="8" mi="0" ci="1" mb="0" cb="0"/><line nr="11" mi="0" ci="3" mb="0" cb="0"/><line nr="15" mi="3" ci="0" mb="0" cb="0"/><line nr="16" mi="1" ci="0" mb="0" cb="0"/><line nr="19" mi="0" ci="3" mb="0" cb="0"/><line nr="23" mi="3" ci="0" mb="0" cb="0"/><line nr="24" mi="1" ci="0" mb="0" cb="0"/><line nr="28" mi="17" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="25" covered="15"/><counter type="LINE" missed="5" covered="6"/><counter type="COMPLEXITY" missed="3" covered="3"/><counter type="METHOD" missed="3" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="TrainFunctions.java"><line nr="3" mi="0" ci="3" mb="0" cb="0"/><line nr="7" mi="0" ci="9" mb="0" cb="2"/><line nr="8" mi="0" ci="10" mb="0" cb="4"/><line nr="9" mi="0" ci="2" mb="0" cb="0"/><line nr="11" mi="0" ci="17" mb="1" cb="3"/><line nr="12" mi="0" ci="3" mb="1" cb="1"/><line nr="13" mi="0" ci="2" mb="0" cb="0"/><line nr="15" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="2" covered="46"/><counter type="BRANCH" missed="2" covered="10"/><counter type="LINE" missed="1" covered="7"/><counter type="COMPLEXITY" missed="2" covered="6"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="PeterSestoft.java"><line nr="1" mi="0" ci="3" mb="0" cb="0"/><line nr="6" mi="4" ci="3" mb="1" cb="1"/><line nr="8" mi="0" ci="7" mb="0" cb="0"/><line nr="9" mi="0" ci="8" mb="0" cb="2"/><line nr="10" mi="0" ci="5" mb="0" cb="0"/><line nr="11" mi="0" ci="6" mb="0" cb="2"/><line nr="12" mi="0" ci="5" mb="0" cb="2"/><line nr="14" mi="0" ci="14" mb="0" cb="0"/><line nr="15" mi="0" ci="6" mb="0" cb="0"/><line nr="16" mi="0" ci="2" mb="0" cb="0"/><line nr="17" mi="2" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="6" covered="59"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="5"/><counter type="METHOD" missed="0" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="33" covered="120"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="3"/></package><counter type="INSTRUCTION" missed="33" covered="120"/><counter type="BRANCH" missed="3" covered="17"/><counter type="LINE" missed="7" covered="23"/><counter type="COMPLEXITY" missed="6" covered="14"/><counter type="METHOD" missed="3" covered="7"/><counter type="CLASS" missed="0" covered="3"/></report>